- apiVersion: registry.ethos.adobe.com/v1
  kind: Cluster
  metadata:
    name: cluster01-prod-useast1
    namespace: cluster-registry
  spec:
    name: cluster01-prod-useast1
    shortName: cluster01produseast1
    apiServer:
      endpoint: https://cluster01-prod-useast1.example.com
      certificateAuthorityData: LS0tLS1CRUdJTiBDRVJUSUZJ==
    argoInstance: argocd-prod-gen-01.cluster01-prod-useast1.example.com
    region: useast1
    cloudType: azure
    cloudProviderRegion: useast1
    environment: Prod
    type: Shared
    businessUnit: BU1
    chargebackBusinessUnit: BU1
    chargedBack: true
    offering:
    - CaaS
    - PaaS
    allowedTeams:
    - name: my-team
      gitTeams:
      - git_team_1
      - git_team_2
      ldapGroups:
      - LDAP_GROUP_EXAMPLE_1
      - LDAP_GROUP_EXAMPLE_2
    capabilities:
    - vpc-peering
    - gpu-compute
    extra:
      loggingEndpoints:
      - region: useast1
        endpoint: splunk-us-east1.example.com
        isDefault: "true"
      - region: useast2
        endpoint: splunk-us-east2.example.com
        isDefault: "false"
      domainName: example.com
      ecrIamArns:
        iamRoles:
        - "arn:aws:iam::account-id:role/xxx"
        - "arn:aws:iam::account-id:role/yyy"
        iamUser:
        - "arn:aws:iam::111222333:user/ecr-login"
      lbEndpoints:
        public: cluster01-prod-useast1.example.com
      egressPorts: "1024-65535"
      nfsInfo:
      - name: xxxss5
        basePath: xyz
        endpoint: xyz
    tiers:
    - name: worker
      containerRuntime: cri-o
      instanceType: c5.9xlarge
      maxCapacity: 1000
      minCapacity: 3
    - name: workerMemoryOptimized
      containerRuntime: cri-o
      instanceType: r5.8xlarge
      labels:
        node.kubernetes.io/workload.memory-optimized: "true"
      maxCapacity: 100
      minCapacity: 0
      taints:
      - workload=memory-optimized:NoSchedule
    accountId: "11111-2222-3333-4444-555555555"
    virtualNetworks:
    - id: "/subscriptions/11111-2222-3333-4444-555555555/resourceGroups/cluster01_prod_useast1_network/providers/Microsoft.Network/virtualNetworks/cluster01_prod_useast1-vnet/subnets/cluster01_prod_useast1_master_network_10_0_0_0_24"
      cidrs:
      - 10.0.0.0/24
    - id: "/subscriptions/11111-2222-3333-4444-555555555/resourceGroups/cluster01_prod_useast1_network/providers/Microsoft.Network/virtualNetworks/cluster01_prod_useast1-vnet/subnets/cluster01_prod_useast1_worker_network_10_1_0_0_24"
      cidrs:
      - 10.1.0.0/24
    peerVirtualNetworks:
    - id: 123r
      cidrs:
      - 10.2.0.1/23
      - 10.3.0.1/24
      ownerID: ownerxxx
    registeredAt: "2021-12-13T05:50:07.492Z"
    lastUpdated: "2021-12-13T05:50:07.492Z"
    maintenanceGroup: B
    managingOrg: Ethos
    capacity:
      clusterCapacity: 50
      clusterProvisioning: 30
      lastUpdated: "2023-03-22T11:55:41Z"
    status: Active
    phase: Running
    tags:
      onboarding: "off"
      scaling: "off"
    services:
      12345:
        ns-team-abc:
          key1: value1
          key2: value2
        ns-team-xyz:
          key3: value3
      98765:
        ns-team-example:
          some.key: some.value
        ns-team-example2:
          foo: bar
- apiVersion: registry.ethos.adobe.com/v1
  kind: Cluster
  metadata:
    name: cluster02-prod-euwest1
    namespace: cluster-registry
  spec:
    name: cluster02-prod-euwest1
    shortName: cluster02prodeuwest1
    apiServer:
      endpoint: https://cluster02-prod-euwest1.example.com
      certificateAuthorityData: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0==
    argoInstance: argocd-prod-gen-02.cluster02-prod-euwest1.example.com
    region: euwest1
    cloudType: azure
    cloudProviderRegion: euwest1
    environment: Prod
    type: Dedicated
    businessUnit: BU2
    chargebackBusinessUnit: BU2
    chargedBack: true
    offering:
    - CaaS
    - PaaS
    allowedTeams:
    - name: my-team
      gitTeams:
      - git_team_3
      - git_team_4
      ldapGroups:
      - LDAP_GROUP_EXAMPLE_2
      - LDAP_GROUP_EXAMPLE_3
    capabilities:
    - mct-support
    extra:
      domainName: example.com
      ecrIamArns:
        iamRoles:
        - "arn:aws:iam::account-id:role/xxx"
        iamUser:
        - "arn:aws:iam::461989703686:user/ecr-login"
      lbEndpoints:
        public: cluster02-prod-euwest1.example.com
    tiers:
    - name: worker
      containerRuntime: cri-o
      instanceType: c5.9xlarge
      maxCapacity: 1000
      minCapacity: 3
    - name: workerMemoryOptimized
      containerRuntime: cri-o
      instanceType: r5.8xlarge
      labels:
        node.kubernetes.io/workload.memory-optimized: "true"
      maxCapacity: 100
      minCapacity: 0
      taints:
      - workload=memory-optimized:NoSchedule
    accountId: "11111-2222-3333-4444-55555555"
    virtualNetworks:
    - id: "/subscriptions/11111-2222-3333-4444-55555555/resourceGroups/cluster02_prod_euwest1_network/providers/Microsoft.Network/virtualNetworks/cluster02_prod_euwest1_network-vnet/subnets/cluster02_prod_euwest1_network_10_3_0_0_24"
      cidrs:
      - 10.3.0.0/24
    registeredAt: "2019-02-10T06:15:32Z"
    lastUpdated: "2020-02-10T06:15:32Z"
    maintenanceGroup: A
    managingOrg: Ethos
    capacity:
      clusterCapacity: 50
      clusterProvisioning: 20
      lastUpdated: "2023-03-22T11:55:41Z"
    status: Active
    phase: Upgrading
    tags:
      onboarding: "off"
      scaling: "on"
    services:
      12345:
        ns-team-abc:
          keyA: valueA
          keyB: valueB
      55555:
        ns-team-foo:
          foo: bar
      98765:
        ns-team-example:
          some.other.key: some.other.value
        ns-team-foobar:
          foo: bar
- apiVersion: registry.ethos.adobe.com/v1
  kind: Cluster
  metadata:
    name: cluster03-prod-uswest1
    namespace: cluster-registry
  spec:
    name: cluster03-prod-uswest1
    shortName: cluster03produswest1
    apiServer:
      endpoint: https://cluster03-prod-uswest1.example.com
      certificateAuthorityData: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS==
    argoInstance: argocd-prod-gen-03.cluster03-prod-uswest1.example.com
    region: uswest1
    cloudType: aws
    cloudProviderRegion: uswest1
    environment: Prod
    type: Dedicated
    businessUnit: BU1
    chargebackBusinessUnit: BU1
    chargedBack: true
    offering:
    - PaaS
    allowedTeams:
    - name: my-team
      gitTeams:
      - git_team_5
      - git_team_6
      ldapGroups:
      - LDAP_GROUP_EXAMPLE_4
      - LDAP_GROUP_EXAMPLE_5
    capabilities:
    - gpu-compute
    caas:
      loggingEndpoints:
      - region: useast1
        endpoint: splunk-us-east1.example.com
        isDefault: "true"
      domainName: example.com
      ecrIamArns:
        iamRoles:
        - "arn:aws:iam::account-id:role/role3"
        iamUser:
        - "arn:aws:iam::111222333444:user/role1"
      lbEndpoints:
        public: cluster03-prod-uswest1.example.com
      egressPorts: "80,443"
      nfsInfo:
      - name: my-nfs
        basePath: "/nfs"
        endpoint: nfs.example.com
        mountOptions: rw
        accessControlled: true
        isDefault: true
    tiers:
    - name: proxy
      containerRuntime: cri-o
      instanceType: r5a.4xlarge
      maxCapacity: 200
      minCapacity: 3
    - name: worker
      containerRuntime: cri-o
      instanceType: c5.9xlarge
      labels:
        node.kubernetes.io/workload.memory-optimized: "true"
      maxCapacity: 1000
      minCapacity: 3
    accountId: "12345678"
    virtualNetworks:
    - id: vpc-123456
      cidrs:
      - 10.0.22.0/8
    registeredAt: "2020-03-19T07:55:46.132Z"
    lastUpdated: "2020-03-20T07:55:46.132Z"
    maintenanceGroup: C
    managingOrg: Ethos
    capacity:
      clusterCapacity: 30
      clusterProvisioning: 30
      lastUpdated: "2023-03-22T11:55:41Z"
    availabilityZones:
    - name: us-east-1a
      id: use1-az1
    - name: us-east-1b
      id: use1-az2
    - name: us-east-1c
      id: use1-az3
    status: Active
    phase: Running
    tags:
      onboarding: "on"
      scaling: "on"
